@page "/person/edit/{Id:guid?}"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using Fotovoltaico.Domain.Entities.DataTransferObjects.Person

<h3>@(isEditing ? "Editar Pessoa" : "Adicionar Pessoa")</h3>

@if (currentPerson == null)
{
    <p>Carregando...</p>
}
else
{
    <div class="card mt-3">
        <div class="card-body">
            <EditForm Model="@currentPerson" OnValidSubmit="SavePerson">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label>Nome:</label>
                    <InputText @bind-Value="currentPerson.Name" class="form-control" />
                </div>
                <div class="mb-3">
                    <label>Nome da Empresa:</label>
                    <InputText @bind-Value="currentPerson.CompanyName" class="form-control" />
                </div>
                <div class="mb-3">
                    <label>Documento:</label>
                    <InputText @bind-Value="currentPerson.Document" class="form-control" />
                </div>
                <div class="mb-3">
                    <label>Tipo de Documento:</label>
                    <InputSelect @bind-Value="currentPerson.DocumentType" class="form-control">
                        <option value="0">CPF</option>
                        <option value="1">CNPJ</option>
                        <option value="2">RG</option>
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <label>Email:</label>
                    <InputText @bind-Value="currentPerson.Email" class="form-control" />
                </div>
                <div class="mb-3">
                    <label>Telefone:</label>
                    <InputText @bind-Value="currentPerson.Phone" class="form-control" />
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary me-2">Salvar</button>
                    <a href="/person/" class="btn btn-secondary">Cancelar</a>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter] public Guid? Id { get; set; }
    private PersonDto currentPerson;
    private bool isEditing = false;

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            // Modo edição
            isEditing = true;
            currentPerson = await Http.GetFromJsonAsync<PersonDto>($"api/person/{Id.Value}");
        }
        else
        {
            // Modo criação
            isEditing = false;
            currentPerson = new PersonDto();
        }
    }

    private async Task SavePerson()
    {


        try
        { 
            if(isEditing)
            {
                var client = new HttpClient();
                var request = new HttpRequestMessage(HttpMethod.Put, "http://localhost:5000/api/person");
                var content = new StringContent("{\r\n  \"id\": \"08dd0f2e-b802-4e4e-8ea5-2afdb7087782\",\r\n  \"name\": \"pessoa editada\",\r\n  \"companyname\": \"pessoa co. editada\",\r\n  \"document\": \"12111111111\",\r\n  \"documentType\": 1,\r\n  \"email\": \"pessoaEditada@email.com\",\r\n  \"phone\": \"12111111111\"\r\n}", null, "application/json");
                request.Content = content;
                var response = await client.SendAsync(request);
                response.EnsureSuccessStatusCode();
                Console.WriteLine(await response.Content.ReadAsStringAsync());
            }
            else
            {
                var client = new HttpClient();
                var request = new HttpRequestMessage(HttpMethod.Post, "http://localhost:5000/api/person");
                var content = new StringContent("{\r\n  \"name\": \"pessoa editada\",\r\n  \"companyname\": \"pessoa co. editada\",\r\n  \"document\": \"12111111111\",\r\n  \"documentType\": 1,\r\n  \"email\": \"pessoaEditada@email.com\",\r\n  \"phone\": \"12111111111\"\r\n}", null, "application/json");
                request.Content = content;
                var response = await client.SendAsync(request);
                response.EnsureSuccessStatusCode();
                Console.WriteLine(await response.Content.ReadAsStringAsync());
            }

            

            // HttpResponseMessage response;

            // if (isEditing)
            // {
            //     var jsonPayload = new
            //     {
            //         Id = currentPerson.Id,
            //         Name = currentPerson.Name,
            //         CompanyName = currentPerson.CompanyName,
            //         Document = currentPerson.Document,
            //         DocumentType = currentPerson.DocumentType,
            //         Email = currentPerson.Email,
            //         Phone = currentPerson.Phone
            //     };

            // var jsonString = System.Text.Json.JsonSerializer.Serialize(jsonPayload);
            // Console.WriteLine($"JSON Enviado: {jsonString}");

            //     var content = new StringContent(jsonString, System.Text.Encoding.UTF8, "application/json");
            //     response = await Http.PutAsync("api/person", content);
            // }
            // else
            // {
            //     var jsonPayload = new
            //     {
            //         Name = currentPerson.Name,
            //         CompanyName = currentPerson.CompanyName,
            //         Document = currentPerson.Document,
            //         DocumentType = currentPerson.DocumentType,
            //         Email = currentPerson.Email,
            //         Phone = currentPerson.Phone
            //     };


            //     var jsonString = System.Text.Json.JsonSerializer.Serialize(jsonPayload);
            //     Console.WriteLine($"JSON Enviado: {jsonString}");

            //     var content = new StringContent(jsonString, System.Text.Encoding.UTF8, "application/json");
            //     response = await Http.PostAsync("api/person", content);
            // }

            // if (response.IsSuccessStatusCode)
            // {
            //     NavigationManager.NavigateTo("/person");
            // }
            // else
            // {
            //     var error = await response.Content.ReadAsStringAsync();
            //     Console.WriteLine($"Erro na requisição: {response.StatusCode} - {error}");
            // }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro no SavePerson: {ex.Message}");
        }
    }

}
