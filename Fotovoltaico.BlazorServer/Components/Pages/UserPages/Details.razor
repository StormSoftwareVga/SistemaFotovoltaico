@page "/users/details"
@using Microsoft.EntityFrameworkCore
@using Fotovoltaico.Domain.Entities.Domain
@inject IDbContextFactory<Fotovoltaico.Infra.Data.Context.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>User</h2>
    <hr />
    @if (user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@user.Name</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@user.Email</dd>
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@user.Password</dd>
            <dt class="col-sm-2">VerificationCode</dt>
            <dd class="col-sm-10">@user.VerificationCode</dd>
            <dt class="col-sm-2">IsVerified</dt>
            <dd class="col-sm-10">@user.IsVerified</dd>
            <dt class="col-sm-2">RecoveryCode</dt>
            <dd class="col-sm-10">@user.RecoveryCode</dd>
            <dt class="col-sm-2">RecoveryCodeGeneratedAt</dt>
            <dd class="col-sm-10">@user.RecoveryCodeGeneratedAt</dd>
            <dt class="col-sm-2">PasswordReset</dt>
            <dd class="col-sm-10">@user.PasswordReset</dd>
            <dt class="col-sm-2">InclusionDate</dt>
            <dd class="col-sm-10">@user.InclusionDate</dd>
            <dt class="col-sm-2">ChangeDate</dt>
            <dd class="col-sm-10">@user.ChangeDate</dd>
        </dl>
        <div>
            <a href="@($"/users/edit?id={user.Id}")">Edit</a> |
            <a href="@($"/users")">Back to List</a>
        </div>
    }
</div>

@code {
    private User? user;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        user = await context.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
