@page "/personaddresses/create"
@using Microsoft.EntityFrameworkCore
@using Fotovoltaico.Domain.Entities.Domain
@inject IDbContextFactory<Fotovoltaico.Infra.Data.Context.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>PersonAddress</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="PersonAddress" OnValidSubmit="AddPersonAddress" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            @* <div class="mb-3"> *@
            @*     <label for="personid" class="form-label">PersonId:</label>  *@
            @*     <InputText id="personid" @bind-Value="PersonAddress.PersonId" class="form-control" />  *@
            @*     <ValidationMessage For="() => PersonAddress.PersonId" class="text-danger" />  *@
            @* </div>         *@
            <div class="mb-3">
                <label for="zipcode" class="form-label">ZipCode:</label> 
                <InputText id="zipcode" @bind-Value="PersonAddress.ZipCode" class="form-control" /> 
                <ValidationMessage For="() => PersonAddress.ZipCode" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="state" class="form-label">State:</label> 
                <InputText id="state" @bind-Value="PersonAddress.State" class="form-control" /> 
                <ValidationMessage For="() => PersonAddress.State" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="city" class="form-label">City:</label> 
                <InputText id="city" @bind-Value="PersonAddress.City" class="form-control" /> 
                <ValidationMessage For="() => PersonAddress.City" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="district" class="form-label">District:</label> 
                <InputText id="district" @bind-Value="PersonAddress.District" class="form-control" /> 
                <ValidationMessage For="() => PersonAddress.District" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="number" class="form-label">Number:</label> 
                <InputText id="number" @bind-Value="PersonAddress.Number" class="form-control" /> 
                <ValidationMessage For="() => PersonAddress.Number" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="PersonAddress.Address" class="form-control" /> 
                <ValidationMessage For="() => PersonAddress.Address" class="text-danger" /> 
            </div>        
            @* <div class="mb-3"> *@
            @*     <label for="inclusiondate" class="form-label">InclusionDate:</label>  *@
            @*     <InputDate id="inclusiondate" @bind-Value="PersonAddress.InclusionDate" class="form-control" />  *@
            @*     <ValidationMessage For="() => PersonAddress.InclusionDate" class="text-danger" />  *@
            @* </div>         *@
            @* <div class="mb-3"> *@
            @*     <label for="changedate" class="form-label">ChangeDate:</label>  *@
            @*     <InputDate id="changedate" @bind-Value="PersonAddress.ChangeDate" class="form-control" />  *@
            @*     <ValidationMessage For="() => PersonAddress.ChangeDate" class="text-danger" />  *@
            @* </div>         *@
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/personaddresses">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private PersonAddress PersonAddress { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPersonAddress()
    {
        using var context = DbFactory.CreateDbContext();
        context.PersonAddresses.Add(PersonAddress);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/personaddresses");
    }
}
